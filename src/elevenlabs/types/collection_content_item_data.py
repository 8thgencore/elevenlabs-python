# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2
from ..core.unchecked_base_model import UncheckedBaseModel, UnionMetadata


class CollectionContentItemData_TaskDescription(UncheckedBaseModel):
    kind: typing.Literal["task_description"] = "task_description"
    ref_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class CollectionContentItemData_Subproject(UncheckedBaseModel):
    kind: typing.Literal["subproject"] = "subproject"
    ref_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


CollectionContentItemData = typing_extensions.Annotated[
    typing.Union[CollectionContentItemData_TaskDescription, CollectionContentItemData_Subproject],
    UnionMetadata(discriminant="kind"),
]
